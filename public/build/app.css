/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
@font-face {
  font-family: "Source Sans Pro Regular";
  src: url(/build/fonts/source-sans-pro.regular.358e8828.ttf);
  font-weight: 400;
}
@font-face {
  font-family: "Source Sans Pro Bold";
  src: url(/build/fonts/source-sans-pro.bold.8a1dab6b.ttf);
  font-weight: 700;
}
main #home {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  width: 100%;
  margin-top: 0;
  margin-bottom: 4rem;
}
main #home .hero {
  position: relative;
  width: 100%;
  height: 70vh;
  overflow: hidden;
}
main #home .hero #background-video {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 70vh;
  object-fit: cover;
  z-index: -1;
}
main #home .hero .overlay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 70vh;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1;
}
main #home .hero .hero-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: white;
  z-index: 2;
}
main #home .hero .hero-content h1 {
  color: inherit;
}
#header {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  display: flex;
  justify-content: center;
}
#header .header {
  width: 100%;
  max-height: 158px;
}
#header .header .language-switcher a.active {
  font-weight: bold;
  border-bottom: 2px solid currentColor;
}
#header .header .logo-container {
  width: 7%;
  min-width: 70px;
  display: flex;
  justify-content: center;
  align-items: center;
}
#header .header .list-container {
  display: flex;
  justify-content: space-between;
  gap: 3rem;
}

@media screen and (min-width: 1921px) {
  #header .header .logo-container {
    width: 3%;
  }
}
@media screen and (max-width: 768px) {
  #header .header .list-container {
    display: none;
  }
}
@keyframes shake {
  0% {
    transform: translateX(0);
  }
  33% {
    transform: translateX(-6px);
  }
  66% {
    transform: translateX(6px);
  }
  100% {
    transform: translateX(0);
  }
}
#form {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  min-height: 100vh;
  background: rgb(62, 0, 24);
  padding: 1rem;
}
#form .form {
  position: relative;
  width: 70%;
  max-width: 1200px;
  display: flex;
  overflow: hidden;
  color: white;
  border-radius: 0.5rem;
  background: #F4F4F4;
  box-shadow: 0 6px 22px rgba(255, 255, 255, 0.3);
  max-height: 500px;
}
#form .form .alert {
  background-color: rgb(85, 0, 28.125);
  padding: 1rem;
  border-radius: 6px;
  margin-bottom: 1rem;
  text-align: center;
}
#form .form .mb-3 {
  margin-bottom: 1rem;
  font-size: 0.95rem;
  text-align: center;
}
#form .form .mb-3 a {
  color: rgb(238, 0, 78.75);
  text-decoration: underline;
}
#form .form .mb-3:hover {
  color: #F4F4F4;
}
#form .form .mix {
  position: relative;
  width: 50%;
  overflow: hidden;
}
#form .form .mix figure {
  width: 100%;
}
#form .form .mix figure img {
  height: 500px;
}
#form .form .mix .headline {
  position: absolute;
  top: 8%;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  padding: 1rem;
  border-radius: 1rem;
  color: white;
  width: 60%;
  mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
  -webkit-mask-image: linear-gradient(to right, transparent, black 20%, black 80%, transparent);
  mask-repeat: no-repeat;
  mask-size: 100% 100%;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
}
#form .form .mix .headline .text-headline {
  color: rgb(62, 0, 24);
  font-size: 1.6rem;
  text-transform: uppercase;
  letter-spacing: 0.4rem;
}
#form .form .mix .headline .text-subheadline {
  color: rgb(136, 0, 45);
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.14rem;
  text-shadow: 2px 2px 2px rgb(136, 92, 126);
}
#form .form .all-form {
  overflow: hidden;
  padding: 10%;
  position: relative;
  width: 50%;
}
#form .form .all-form span {
  display: block;
  margin-bottom: 1.15rem;
  position: relative;
}
#form .form .all-form span label {
  color: rgb(62, 0, 24);
  font-family: "Source Sans Pro Bold", serif;
  font-size: 0.75rem;
  letter-spacing: 0.08rem;
  text-transform: uppercase;
  display: inline-block;
  transform: translateY(1.25rem);
  transition: 0.15s ease;
}
#form .form .all-form span input {
  width: 100%;
  border: none;
  border-bottom: 2px solid rgb(136, 92, 126);
  font-family: "Source Sans Pro Bold", serif;
  color: rgb(62, 0, 24);
  background: none;
  padding: 0.3rem 0;
  outline: none;
}
#form .form .all-form input[type=submit] {
  margin: 1em auto 0;
  background: rgb(62, 0, 24);
  color: #F4F4F4;
  border: none;
  padding: 0.8rem 2rem;
  font-family: "Source Sans Pro Bold", serif;
  cursor: pointer;
  transition: background 0.3s;
}
#form .form .all-form input[type=submit]:hover,
#form .form .all-form input[type=submit]:focus {
  background: rgb(113, 0, 43.7419354839);
}
#form .form .all-form .inputs--filled label {
  transform: translate(0, 0);
}
#form .form .all-form .inputs--invalid input {
  border-bottom: 4px solid rgb(136, 0, 45);
  color: rgb(136, 0, 45);
  animation: shake 0.3s both ease-in-out;
}
#form .form .all-form .inputs--invalid label {
  color: rgb(136, 0, 45);
}

@media screen and (max-width: 1000px) {
  #form .form .mix .headline {
    width: 100%;
  }
}
@media screen and (max-width: 768px) {
  #form {
    width: 100%;
  }
  #form .form {
    flex-direction: column;
    max-height: 750px;
  }
  #form .form .mix {
    width: 100%;
  }
  #form .form .all-form {
    padding: 5%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  #form .form .all-form span {
    text-align: center;
  }
  #form .form .all-form span input {
    text-align: center;
  }
}
@media screen and (max-width: 360px) {
  #form {
    padding: 0;
  }
  #form .form {
    width: 100%;
  }
}
* {
  box-sizing: border-box;
}

body {
  position: relative;
  margin: 0px auto;
  font-family: "Source Sans Pro Regular", serif;
  background: #F4F4F4;
  color: white;
}

main {
  width: 100%;
}

section {
  margin-top: 4rem;
}

figure {
  margin: 0;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

h1, h2, h3 {
  margin: 0;
  font-family: "Source Sans Pro Bold", serif;
  color: white;
}

ul {
  list-style: none;
  padding-left: 0px;
}

a {
  text-decoration: none;
}

#loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(83, 79, 79, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.container {
  width: 80%;
}

.form-container {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 3rem;
}
.form-container form {
  width: 30%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 2rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/